{
    "collab_server" : "",
    "contents" : "###Load Packages###\n##always load plyr before dplyr##\nlibrary(plyr)\nlibrary(dplyr)\nlibrary(lubridate)\nlibrary(ggplot2)\nlibrary(shiny)\nlibrary(reshape2)\nlibrary(leaflet)\nlibrary(purrr)\nlibrary(rsconnect)\n\n\n##Read Data##\ndata=read.table(\"data/CrossTabData.txt\", header=T, sep=\"\\t\")\n#drop lat and long fields to replace later from PolygonGPS#\nhead(data)\npolygon.gps=read.table(\"data/PolygonGPS.txt\", header=T, sep=\"\\t\")\nspecies.info=read.table(\"data/tblSpeciesLookup.txt\", header=T, sep=\"\\t\")\nstation.info=read.table(\"data/tblStationRegions.txt\", header=T, sep=\"\\t\")\nlarval.data=readRDS(\"data/larvaldata.rds\")\n\n\n##Clean Data##\n#format dates#\ndata$Date <- as.Date(data$Date , \"%m/%d/%Y\")\n#join data#\ndata=data%>%\n  rbind.fill(data,larval.data)\ndata.location=station.info%>%\n  inner_join(polygon.gps)\ndata=data%>%\n  inner_join(data.location)\nhead(data)\n\n\n#order dates and add month/year columns#\ndata[order(data$Date, decreasing=TRUE ),]\ndata<-data%>%\n  mutate(month = format(Date, \"%m\"), year = format(Date, \"%Y\"))\n#select for 2015 and 2016#\n#target=c(\"2015\",\"2016\")\n#data=data%>%\n  #filter(year %in% target)\nhead(data)\n\ndata.clean=data\n#filter out inverts#\ndata.clean <- subset( data.clean, select = -c(AMPHIPOD, AMPHPD, ASIMUS,CALLIA, CMAENA, CMAGIS, CORBIC, CORBUL, CPRODU, CRANFR, CRANNC, CRANNM, CRANSP, DECORC, EXOPAL,HEMIGR, HEPTSTI, HETERO, HOREGO, IOBSOL, ISOPOD, JELLYF, LSTYLI, MACOMA, MCALIF, MSENHO, MUSBLE, MUSCUL, MUSSEN, MYSID, MYSIDR, MYTILS, NUDIBR, OLURID, PALAEM, PHILIN, PILEWR, POLYCH, PPRODU, RHARRI, RIDGEM, SNAILS, SPONGE, TAPJAP, TUNICA, UCINER, UNID.Clam, UNID.CRAB, UNID.NUD, UNID.LARVAL,UNID.GOBY) )\nhead(data.clean)\n\n#need to turn all 0 catches to NA values to calculate CPUE properly\ndata.clean[data.clean == 0] <- NA\n\n#calculate CPUE (catch per minute towed)#\n#assign these to new fish range#\n#the \"which(colnames)\" call will display in the console what columns match those \nwhich(colnames(data.clean)==\"AMESHA\")\nwhich(colnames(data.clean)==\"YELSEE\")\ndata.cpue=data.clean\ndata.cpue[,47:110]=data.cpue[,47:110]/data.clean$TowDuration\nhead(data.cpue)\n\n#sum up catch data for totals#\ndata.cpue$All=rowSums(data.cpue[,47:110], na.rm=T)\nhead(data.cpue)\n#rearrange order#\ndata.cpue = data.cpue[, c(1:46,129, 47:128)]\n\n\n#change month from number to month name#\ndata.cpue$monthname <- months(as.Date(data.cpue$Date))\nhead(data.cpue)\n\n##rearrange in longform using reshape2 melt##\nwhich(colnames(data.cpue)==\"All\")\nwhich(colnames(data.cpue)==\"YELSEE\")\ndata.cpue.melt=melt(data.cpue,id.vars=c(\"ID\",\"Polygon.Station\",\"Method\",\"BegSurfSalin\",\"BegSurfCond\",\"BegSurfTemp\",\"BegSurfDO.mg.L.\",\"BegSurfDO.\",\"Bay.Region\",\"Date\",\"longitude\",\"latitude\",\"Tributary.Marsh\"), measure.vars=c(47:111),\n                    variable.name=\"FishCode\",\n                    value.name=\"CPUE\")\nhead(data.cpue.melt)\n\ndata.cpue.melt=data.cpue.melt[order(data.cpue.melt$FishCode),]\nhead(data.cpue.melt)\n\n#join in common names#\ndata.cpue.melt=data.cpue.melt%>%\n  inner_join(species.info)\nhead(data.cpue.melt)\n\n#change NA values to 0#\ndata.cpue.melt$CPUE[is.na(data.cpue.melt$CPUE)]<-0\n\n#average CPUE by month, year and station#\n#not using this anymore due to changing the date system\n#data.melt.average=data.cpue.melt%>%\n  #group_by_(\"month\",\"Bay.Region\",\"monthname\",\"year\",\"Polygon.Station\",\"latitude\",\"longitude\",\"CommonName\",\"NatInv\")%>%\n  #summarise(CPUE=mean(CPUE,na.rm=TRUE), BegSurfSalin=mean(BegSurfSalin,na.rm=TRUE), BegSurfTemp=mean(BegSurfTemp, na.rm=TRUE), \n            #BegSurfCond=mean(BegSurfCond, na.rm=TRUE),BegSurfDO.=mean(BegSurfDO.,na.rm=TRUE),\n            #BegSurfDO.mg.L.=mean(BegSurfDO.mg.L.,na.rm=TRUE))\n#data.melt.average\n\n#now switch 0 back to na#\n#data.melt.average$CPUE[data.melt.average$CPUE == 0] <- NA\n\n#get bins for CPUE averages#\n#max(data.melt.average$CPUE, na.rm=TRUE)\n#data.melt.average[order(data.melt.average$CPUE, decreasing=TRUE ),]\n#CPUE.bins <- hist(data.melt.average$CPUE,plot=TRUE)\n\n\n###data debugging###\ndata.debug=data%>%\n  filter(Method==\"SLS\")\n\n",
    "created" : 1488761440405.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4011564778",
    "id" : "DB4C6E19",
    "lastKnownWriteTime" : 1488767599,
    "last_content_update" : 1488767599584,
    "path" : "C:/Users/Barros/Desktop/R/shiny-server/OtterTrawlMapApp/global.R",
    "project_path" : "global.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}