"DOSat.mg.L.StartTop"="BegSurfDO(mg/L)","Temp.C.StartBottom"="BegBotTemp","Conductivity.uS.cm.StartBottom"="BegBotCond",
"Salinity.ppt.StartBottom"="BegBotSalin","DOSat.Percent.StartBottom"="BegBotDO%","DOSat.mg.L.StartBottom"="BegBotDO(mg/L)",
"Temp.C.EndTop"="EndSurfTemp","Conductivity.uS.cm.EndTop"="EndSurfCond","Salinity.ppt.EndTop"="EndSurfSalin",
"DOSat.Percent.EndTop"="EndSurfDO%","DOSat.mg.L.EndTop"="EndSurfDO(mg/L)","Temp.C.EndBottom"="EndBotTemp",
"Conductivity.uS.cm.EndBottom"="EndBotCond","Salinity.ppt.EndBottom"="EndBotSalin","DOSat.Percent.EndBottom"="EndBotDO%",
"DOSat.mg.L.EndBottom"="EndBotDO(mg/L)","StartSecchi.cm."="BegSecchi","EndSecchi.cm."="EndSecchi","StartNTU"="BegNTU","StartpH"="BegPH","EndpH"="EndPH"))
removals<-c("StationNames","CableAngle","Latitude","Longitude","TrackNote","SalinityZone","WQStartFile","WQEndFile","SerialNumber","DELSME","LONSME/DELSME Hybrid","UNID Centrarchidae","UNID GOBY","UNID Long Skinny","UNID Non-Larval","Chl.ug.L.StartBottom","Chl.RFU.StartBottom","Chl.ug.L.StartTop","Chl.RFU.StartTop","Chl.ug.L.EndTop","Chl.RFU.EndTop","Chl.ug.L.EndBottom","Chl.RFU.EndBottom")
data<-data[ , -which(names(data) %in% removals)]
head(data)
data$Date = as.Date(data$Date, format = "%m/%d/%Y")
saveRDS(data,file="C:\\Users\\Barros\\Desktop\\R\\R for work\\OtterTrawlMapApp\\data\\larvaldata.rds")
debug=data.catch.wide%>%
filter(Net!="SLS")%>%
filter(Net!="Mysid")
debug=data%>%
filter(Net!="SLS")%>%
filter(Net!="Mysid")
debug=data%>%
filter(Method!="SLS")%>%
filter(Method!="Mysid")
debug
saveRDS(data,file="C:\\Users\\Barros\\Desktop\\R\\R for work\\OtterTrawlMapApp\\data\\larvaldata.rds")
runApp()
runApp()
data.debug=data.cpue.melt%>%
filter(Method=="20mm")
data.debug
data.debug=data.cpue.melt%>%
filter(Method=="SLS")
data.debug
debug=data%>%
filter(Method!="SLS")%>%
filter(Method!="Mysid")
debug
discard<-c("Date","Replicate")
data.catch=read.table("data/tblFishCatchInfo.txt", header= T, sep= "\t")
data.catch<-data.catch[ , -which(names(data.catch) %in% discard)]
data.tow=read.table("data/tblTowInfo.txt", header= T, sep= "\t")
data.water=read.table("data/tblWaterInfo.txt", header= T, sep= "\t")
data.water<-data.water[ , -which(names(data.water) %in% discard)]
#format TowDurations#
data.tow$TowDuration<-strptime(data.tow$TowDuration, "%m/%d/%Y %H:%M:%S")
#convert TowDuration to just numbers#
data.tow$TowDuration <- strftime(data.tow$TowDuration, format="%H:%M:%S")
data.tow$TowDuration <- gsub("00", "", data.tow$TowDuration)
data.tow$TowDuration<-gsub(":","",data.tow$TowDuration)
data.tow<-transform(data.tow, TowDuration = as.numeric(TowDuration))
#reshape fish catch to wide format
data.catch.wide <- dcast(data.catch, RecordNumber + Date + Net ~ FishCode, value.var="AdjustedLabCount",fun.aggregate=sum)
head(data.catch.wide)
#join data
data=data.catch.wide%>%
inner_join(data.water)%>%
inner_join(data.tow)
head(data)
#rename columns to match mapapp
data<-plyr::rename(data, c("RecordNumber"="ID","Net"="Method","Tide"="TideText", "StationName"="Polygon.Station","AvgTrawlDepth"="Depth","Tide.Height"="TideHeight","Temp.C.StartTop"="BegSurfTemp",
"Conductivity.uS.cm.StartTop"="BegSurfCond","Salinity.ppt.StartTop"="BegSurfSalin","DOSat.Percent.StartTop"="BegSurfDO%",
"DOSat.mg.L.StartTop"="BegSurfDO(mg/L)","Temp.C.StartBottom"="BegBotTemp","Conductivity.uS.cm.StartBottom"="BegBotCond",
"Salinity.ppt.StartBottom"="BegBotSalin","DOSat.Percent.StartBottom"="BegBotDO%","DOSat.mg.L.StartBottom"="BegBotDO(mg/L)",
"Temp.C.EndTop"="EndSurfTemp","Conductivity.uS.cm.EndTop"="EndSurfCond","Salinity.ppt.EndTop"="EndSurfSalin",
"DOSat.Percent.EndTop"="EndSurfDO%","DOSat.mg.L.EndTop"="EndSurfDO(mg/L)","Temp.C.EndBottom"="EndBotTemp",
"Conductivity.uS.cm.EndBottom"="EndBotCond","Salinity.ppt.EndBottom"="EndBotSalin","DOSat.Percent.EndBottom"="EndBotDO%",
"DOSat.mg.L.EndBottom"="EndBotDO(mg/L)","StartSecchi.cm."="BegSecchi","EndSecchi.cm."="EndSecchi","StartNTU"="BegNTU","StartpH"="BegPH","EndpH"="EndPH"))
#remove unnecessary columns
removals<-c("StationNames","CableAngle","Latitude","Longitude","TrackNote","SalinityZone","WQStartFile","WQEndFile","SerialNumber","DELSME","LONSME/DELSME Hybrid","UNID Centrarchidae","UNID GOBY","UNID Long Skinny","UNID Non-Larval","Chl.ug.L.StartBottom","Chl.RFU.StartBottom","Chl.ug.L.StartTop","Chl.RFU.StartTop","Chl.ug.L.EndTop","Chl.RFU.EndTop","Chl.ug.L.EndBottom","Chl.RFU.EndBottom")
data<-data[ , -which(names(data) %in% removals)]
head(data)
#change date from type factor top type date
data$Date = as.Date(data$Date, format = "%m/%d/%Y")
saveRDS(data,file="C:\\Users\\Barros\\Desktop\\R\\R for work\\OtterTrawlMapApp\\data\\larvaldata.rds")
debug=data%>%
filter(Method!="SLS")%>%
filter(Method!="Mysid")
#debugging
debug
##Read Data##
data=read.table("data/CrossTabData.txt", header=T, sep="\t")
#drop lat and long fields to replace later from PolygonGPS#
head(data)
polygon.gps=read.table("data/PolygonGPS.txt", header=T, sep="\t")
species.info=read.table("data/tblSpeciesLookup.txt", header=T, sep="\t")
station.info=read.table("data/tblStationRegions.txt", header=T, sep="\t")
larval.data=readRDS("data/larvaldata.rds")
##Clean Data##
#join data#
data=data%>%
rbind.fill(data,larval.data)
data.location=station.info%>%
inner_join(polygon.gps)
data=data%>%
inner_join(data.location)
head(data)
#format dates#
data$Date <- as.Date(data$Date , "%m/%d/%Y")
#order dates and add month/year columns#
data[order(data$Date, decreasing=TRUE ),]
data<-data%>%
mutate(month = format(Date, "%m"), year = format(Date, "%Y"))
#select for 2015 and 2016#
#target=c("2015","2016")
#data=data%>%
#filter(year %in% target)
head(data)
data.clean=data
#filter out inverts#
data.clean <- subset( data.clean, select = -c(AMPHIPOD, AMPHPD, ASIMUS,CALLIA, CMAENA, CMAGIS, CORBIC, CORBUL, CPRODU, CRANFR, CRANNC, CRANNM, CRANSP, DECORC, EXOPAL,HEMIGR, HEPTSTI, HETERO, HOREGO, IOBSOL, ISOPOD, JELLYF, LSTYLI, MACOMA, MCALIF, MSENHO, MUSBLE, MUSCUL, MUSSEN, MYSID, MYSIDR, MYTILS, NUDIBR, OLURID, PALAEM, PHILIN, PILEWR, POLYCH, PPRODU, RHARRI, RIDGEM, SNAILS, SPONGE, TAPJAP, TUNICA, UCINER, UNID.Clam, UNID.CRAB, UNID.NUD, UNID.LARVAL,UNID.GOBY) )
head(data.clean)
#need to turn all 0 catches to NA values to calculate CPUE properly
data.clean[data.clean == 0] <- NA
#calculate CPUE (catch per minute towed)#
#assign these to new fish range#
#the "which(colnames)" call will display in the console what columns match those
which(colnames(data.clean)=="AMESHA")
which(colnames(data.clean)=="YELSEE")
data.cpue=data.clean
data.cpue[,47:110]=data.cpue[,47:110]/data.clean$TowDuration
head(data.cpue)
#sum up catch data for totals#
data.cpue$All=rowSums(data.cpue[,47:110], na.rm=T)
head(data.cpue)
#rearrange order#
data.cpue = data.cpue[, c(1:46,129, 47:128)]
#change month from number to month name#
data.cpue$monthname <- months(as.Date(data.cpue$Date))
head(data.cpue)
##rearrange in longform using reshape2 melt##
which(colnames(data.cpue)=="All")
which(colnames(data.cpue)=="YELSEE")
data.cpue.melt=melt(data.cpue,id.vars=c("ID","Polygon.Station","Method","BegSurfSalin","BegSurfCond","BegSurfTemp","BegSurfDO.mg.L.","BegSurfDO.","Bay.Region","Date","longitude","latitude","Tributary.Marsh"), measure.vars=c(47:111),
variable.name="FishCode",
value.name="CPUE")
head(data.cpue.melt)
data.cpue.melt=data.cpue.melt[order(data.cpue.melt$FishCode),]
head(data.cpue.melt)
#join in common names#
data.cpue.melt=data.cpue.melt%>%
inner_join(species.info)
head(data.cpue.melt)
#change NA values to 0#
data.cpue.melt$CPUE[is.na(data.cpue.melt$CPUE)]<-0
#average CPUE by month, year and station#
#not using this anymore due to changing the date system
#data.melt.average=data.cpue.melt%>%
#group_by_("month","Bay.Region","monthname","year","Polygon.Station","latitude","longitude","CommonName","NatInv")%>%
#summarise(CPUE=mean(CPUE,na.rm=TRUE), BegSurfSalin=mean(BegSurfSalin,na.rm=TRUE), BegSurfTemp=mean(BegSurfTemp, na.rm=TRUE),
#BegSurfCond=mean(BegSurfCond, na.rm=TRUE),BegSurfDO.=mean(BegSurfDO.,na.rm=TRUE),
#BegSurfDO.mg.L.=mean(BegSurfDO.mg.L.,na.rm=TRUE))
#data.melt.average
#now switch 0 back to na#
#data.melt.average$CPUE[data.melt.average$CPUE == 0] <- NA
#get bins for CPUE averages#
#max(data.melt.average$CPUE, na.rm=TRUE)
#data.melt.average[order(data.melt.average$CPUE, decreasing=TRUE ),]
#CPUE.bins <- hist(data.melt.average$CPUE,plot=TRUE)
data.debug=data.cpue.melt%>%
filter(Method=="SLS")
data.debug
data.debug=data.cpue.melt%>%
filter(Method=="20mm")
data.debug
data.debug=larval.data%>%
filter(Method=="20mm")
data.debug
debug=data%>%
filter(Method!="SLS")%>%
filter(Method!="Mysid")
#Import data
discard<-c("Date","Replicate")
data.catch=read.table("data/tblFishCatchInfo.txt", header= T, sep= "\t")
data.catch<-data.catch[ , -which(names(data.catch) %in% discard)]
data.tow=read.table("data/tblTowInfo.txt", header= T, sep= "\t")
data.water=read.table("data/tblWaterInfo.txt", header= T, sep= "\t")
data.water<-data.water[ , -which(names(data.water) %in% discard)]
#format TowDurations#
data.tow$TowDuration<-strptime(data.tow$TowDuration, "%m/%d/%Y %H:%M:%S")
#convert TowDuration to just numbers#
data.tow$TowDuration <- strftime(data.tow$TowDuration, format="%H:%M:%S")
data.tow$TowDuration <- gsub("00", "", data.tow$TowDuration)
data.tow$TowDuration<-gsub(":","",data.tow$TowDuration)
data.tow<-transform(data.tow, TowDuration = as.numeric(TowDuration))
#reshape fish catch to wide format
data.catch.wide <- dcast(data.catch, RecordNumber + Date + Net ~ FishCode, value.var="AdjustedLabCount",fun.aggregate=sum)
head(data.catch.wide)
#join data
data=data.catch.wide%>%
inner_join(data.water)%>%
inner_join(data.tow)
head(data)
#rename columns to match mapapp
data<-plyr::rename(data, c("RecordNumber"="ID","Net"="Method","Tide"="TideText", "StationName"="Polygon.Station","AvgTrawlDepth"="Depth","Tide.Height"="TideHeight","Temp.C.StartTop"="BegSurfTemp",
"Conductivity.uS.cm.StartTop"="BegSurfCond","Salinity.ppt.StartTop"="BegSurfSalin","DOSat.Percent.StartTop"="BegSurfDO%",
"DOSat.mg.L.StartTop"="BegSurfDO(mg/L)","Temp.C.StartBottom"="BegBotTemp","Conductivity.uS.cm.StartBottom"="BegBotCond",
"Salinity.ppt.StartBottom"="BegBotSalin","DOSat.Percent.StartBottom"="BegBotDO%","DOSat.mg.L.StartBottom"="BegBotDO(mg/L)",
"Temp.C.EndTop"="EndSurfTemp","Conductivity.uS.cm.EndTop"="EndSurfCond","Salinity.ppt.EndTop"="EndSurfSalin",
"DOSat.Percent.EndTop"="EndSurfDO%","DOSat.mg.L.EndTop"="EndSurfDO(mg/L)","Temp.C.EndBottom"="EndBotTemp",
"Conductivity.uS.cm.EndBottom"="EndBotCond","Salinity.ppt.EndBottom"="EndBotSalin","DOSat.Percent.EndBottom"="EndBotDO%",
"DOSat.mg.L.EndBottom"="EndBotDO(mg/L)","StartSecchi.cm."="BegSecchi","EndSecchi.cm."="EndSecchi","StartNTU"="BegNTU","StartpH"="BegPH","EndpH"="EndPH"))
#remove unnecessary columns
removals<-c("StationNames","CableAngle","Latitude","Longitude","TrackNote","SalinityZone","WQStartFile","WQEndFile","SerialNumber","DELSME","LONSME/DELSME Hybrid","UNID Centrarchidae","UNID GOBY","UNID Long Skinny","UNID Non-Larval","Chl.ug.L.StartBottom","Chl.RFU.StartBottom","Chl.ug.L.StartTop","Chl.RFU.StartTop","Chl.ug.L.EndTop","Chl.RFU.EndTop","Chl.ug.L.EndBottom","Chl.RFU.EndBottom")
data<-data[ , -which(names(data) %in% removals)]
head(data)
#change date from type factor top type date
data$Date = as.Date(data$Date, format = "%m/%d/%Y")
saveRDS(data,file="C:\\Users\\Barros\\Desktop\\R\\R for work\\OtterTrawlMapApp\\data\\larvaldata.rds")
#debugging
debug=data%>%
filter(Method!="SLS")%>%
filter(Method!="Mysid")
debug
##Read Data##
data=read.table("data/CrossTabData.txt", header=T, sep="\t")
#drop lat and long fields to replace later from PolygonGPS#
head(data)
polygon.gps=read.table("data/PolygonGPS.txt", header=T, sep="\t")
species.info=read.table("data/tblSpeciesLookup.txt", header=T, sep="\t")
station.info=read.table("data/tblStationRegions.txt", header=T, sep="\t")
larval.data=readRDS("data/larvaldata.rds")
data.debug=larval.data%>%
filter(Method=="20mm")
data.debug
data.debug=larval.data%>%
filter(Method=="SLS")
###data debugging###
data.debug
#Import data
discard<-c("Date","Replicate")
data.catch=read.table("data/tblFishCatchInfo.txt", header= T, sep= "\t")
data.catch<-data.catch[ , -which(names(data.catch) %in% discard)]
data.tow=read.table("data/tblTowInfo.txt", header= T, sep= "\t")
data.water=read.table("data/tblWaterInfo.txt", header= T, sep= "\t")
data.water<-data.water[ , -which(names(data.water) %in% discard)]
#format TowDurations#
data.tow$TowDuration<-strptime(data.tow$TowDuration, "%m/%d/%Y %H:%M:%S")
#convert TowDuration to just numbers#
data.tow$TowDuration <- strftime(data.tow$TowDuration, format="%H:%M:%S")
data.tow$TowDuration <- gsub("00", "", data.tow$TowDuration)
data.tow$TowDuration<-gsub(":","",data.tow$TowDuration)
data.tow<-transform(data.tow, TowDuration = as.numeric(TowDuration))
#reshape fish catch to wide format
data.catch.wide <- dcast(data.catch, RecordNumber + Date + Net ~ FishCode, value.var="AdjustedLabCount",fun.aggregate=sum)
head(data.catch.wide)
#join data
data=data.catch.wide%>%
inner_join(data.water)%>%
inner_join(data.tow)
head(data)
#rename columns to match mapapp
data<-plyr::rename(data, c("RecordNumber"="ID","Net"="Method","Tide"="TideText", "StationName"="Polygon.Station","AvgTrawlDepth"="Depth","Tide.Height"="TideHeight","Temp.C.StartTop"="BegSurfTemp",
"Conductivity.uS.cm.StartTop"="BegSurfCond","Salinity.ppt.StartTop"="BegSurfSalin","DOSat.Percent.StartTop"="BegSurfDO%",
"DOSat.mg.L.StartTop"="BegSurfDO(mg/L)","Temp.C.StartBottom"="BegBotTemp","Conductivity.uS.cm.StartBottom"="BegBotCond",
"Salinity.ppt.StartBottom"="BegBotSalin","DOSat.Percent.StartBottom"="BegBotDO%","DOSat.mg.L.StartBottom"="BegBotDO(mg/L)",
"Temp.C.EndTop"="EndSurfTemp","Conductivity.uS.cm.EndTop"="EndSurfCond","Salinity.ppt.EndTop"="EndSurfSalin",
"DOSat.Percent.EndTop"="EndSurfDO%","DOSat.mg.L.EndTop"="EndSurfDO(mg/L)","Temp.C.EndBottom"="EndBotTemp",
"Conductivity.uS.cm.EndBottom"="EndBotCond","Salinity.ppt.EndBottom"="EndBotSalin","DOSat.Percent.EndBottom"="EndBotDO%",
"DOSat.mg.L.EndBottom"="EndBotDO(mg/L)","StartSecchi.cm."="BegSecchi","EndSecchi.cm."="EndSecchi","StartNTU"="BegNTU","StartpH"="BegPH","EndpH"="EndPH"))
#remove unnecessary columns
removals<-c("StationNames","CableAngle","Latitude","Longitude","TrackNote","SalinityZone","WQStartFile","WQEndFile","SerialNumber","DELSME","LONSME/DELSME Hybrid","UNID Centrarchidae","UNID GOBY","UNID Long Skinny","UNID Non-Larval","Chl.ug.L.StartBottom","Chl.RFU.StartBottom","Chl.ug.L.StartTop","Chl.RFU.StartTop","Chl.ug.L.EndTop","Chl.RFU.EndTop","Chl.ug.L.EndBottom","Chl.RFU.EndBottom")
data<-data[ , -which(names(data) %in% removals)]
head(data)
#change date from type factor top type date
data$Date = as.Date(data$Date, format = "%m/%d/%Y")
saveRDS(data,file="C:\\Users\\Barros\\Desktop\\R\\R for work\\OtterTrawlMapApp\\data\\larvaldata.rds")
#Import data
discard<-c("Date","Replicate")
data.catch=read.table("data/tblFishCatchInfo.txt", header= T, sep= "\t")
data.catch<-data.catch[ , -which(names(data.catch) %in% discard)]
data.tow=read.table("data/tblTowInfo.txt", header= T, sep= "\t")
data.water=read.table("data/tblWaterInfo.txt", header= T, sep= "\t")
data.water<-data.water[ , -which(names(data.water) %in% discard)]
#format TowDurations#
data.tow$TowDuration<-strptime(data.tow$TowDuration, "%m/%d/%Y %H:%M:%S")
#convert TowDuration to just numbers#
data.tow$TowDuration <- strftime(data.tow$TowDuration, format="%H:%M:%S")
data.tow$TowDuration <- gsub("00", "", data.tow$TowDuration)
data.tow$TowDuration<-gsub(":","",data.tow$TowDuration)
data.tow<-transform(data.tow, TowDuration = as.numeric(TowDuration))
#reshape fish catch to wide format
data.catch.wide <- dcast(data.catch, RecordNumber + Net ~ FishCode, value.var="AdjustedLabCount",fun.aggregate=sum)
head(data.catch.wide)
#join data
data=data.catch.wide%>%
inner_join(data.water)%>%
inner_join(data.tow)
head(data)
#rename columns to match mapapp
data<-plyr::rename(data, c("RecordNumber"="ID","Net"="Method","Tide"="TideText", "StationName"="Polygon.Station","AvgTrawlDepth"="Depth","Tide.Height"="TideHeight","Temp.C.StartTop"="BegSurfTemp",
"Conductivity.uS.cm.StartTop"="BegSurfCond","Salinity.ppt.StartTop"="BegSurfSalin","DOSat.Percent.StartTop"="BegSurfDO%",
"DOSat.mg.L.StartTop"="BegSurfDO(mg/L)","Temp.C.StartBottom"="BegBotTemp","Conductivity.uS.cm.StartBottom"="BegBotCond",
"Salinity.ppt.StartBottom"="BegBotSalin","DOSat.Percent.StartBottom"="BegBotDO%","DOSat.mg.L.StartBottom"="BegBotDO(mg/L)",
"Temp.C.EndTop"="EndSurfTemp","Conductivity.uS.cm.EndTop"="EndSurfCond","Salinity.ppt.EndTop"="EndSurfSalin",
"DOSat.Percent.EndTop"="EndSurfDO%","DOSat.mg.L.EndTop"="EndSurfDO(mg/L)","Temp.C.EndBottom"="EndBotTemp",
"Conductivity.uS.cm.EndBottom"="EndBotCond","Salinity.ppt.EndBottom"="EndBotSalin","DOSat.Percent.EndBottom"="EndBotDO%",
"DOSat.mg.L.EndBottom"="EndBotDO(mg/L)","StartSecchi.cm."="BegSecchi","EndSecchi.cm."="EndSecchi","StartNTU"="BegNTU","StartpH"="BegPH","EndpH"="EndPH"))
#remove unnecessary columns
removals<-c("StationNames","CableAngle","Latitude","Longitude","TrackNote","SalinityZone","WQStartFile","WQEndFile","SerialNumber","DELSME","LONSME/DELSME Hybrid","UNID Centrarchidae","UNID GOBY","UNID Long Skinny","UNID Non-Larval","Chl.ug.L.StartBottom","Chl.RFU.StartBottom","Chl.ug.L.StartTop","Chl.RFU.StartTop","Chl.ug.L.EndTop","Chl.RFU.EndTop","Chl.ug.L.EndBottom","Chl.RFU.EndBottom")
data<-data[ , -which(names(data) %in% removals)]
head(data)
#change date from type factor top type date
data$Date = as.Date(data$Date, format = "%m/%d/%Y")
saveRDS(data,file="C:\\Users\\Barros\\Desktop\\R\\R for work\\OtterTrawlMapApp\\data\\larvaldata.rds")
#debugging
debug=data%>%
filter(Method!="SLS")%>%
filter(Method!="Mysid")
debug
#Import data
discard<-c("Date","Replicate")
data.catch=read.table("data/tblFishCatchInfo.txt", header= T, sep= "\t")
data.tow=read.table("data/tblTowInfo.txt", header= T, sep= "\t")
data.tow<-data.tow[ , -which(names(data.tow) %in% discard)]
data.water=read.table("data/tblWaterInfo.txt", header= T, sep= "\t")
data.water<-data.water[ , -which(names(data.water) %in% discard)]
#format TowDurations#
data.tow$TowDuration<-strptime(data.tow$TowDuration, "%m/%d/%Y %H:%M:%S")
#convert TowDuration to just numbers#
data.tow$TowDuration <- strftime(data.tow$TowDuration, format="%H:%M:%S")
data.tow$TowDuration <- gsub("00", "", data.tow$TowDuration)
data.tow$TowDuration<-gsub(":","",data.tow$TowDuration)
data.tow<-transform(data.tow, TowDuration = as.numeric(TowDuration))
#reshape fish catch to wide format
data.catch.wide <- dcast(data.catch, RecordNumber + Date + Net ~ FishCode, value.var="AdjustedLabCount",fun.aggregate=sum)
head(data.catch.wide)
#join data
data=data.catch.wide%>%
inner_join(data.water)%>%
inner_join(data.tow)
head(data)
#rename columns to match mapapp
data<-plyr::rename(data, c("RecordNumber"="ID","Net"="Method","Tide"="TideText", "StationName"="Polygon.Station","AvgTrawlDepth"="Depth","Tide.Height"="TideHeight","Temp.C.StartTop"="BegSurfTemp",
"Conductivity.uS.cm.StartTop"="BegSurfCond","Salinity.ppt.StartTop"="BegSurfSalin","DOSat.Percent.StartTop"="BegSurfDO%",
"DOSat.mg.L.StartTop"="BegSurfDO(mg/L)","Temp.C.StartBottom"="BegBotTemp","Conductivity.uS.cm.StartBottom"="BegBotCond",
"Salinity.ppt.StartBottom"="BegBotSalin","DOSat.Percent.StartBottom"="BegBotDO%","DOSat.mg.L.StartBottom"="BegBotDO(mg/L)",
"Temp.C.EndTop"="EndSurfTemp","Conductivity.uS.cm.EndTop"="EndSurfCond","Salinity.ppt.EndTop"="EndSurfSalin",
"DOSat.Percent.EndTop"="EndSurfDO%","DOSat.mg.L.EndTop"="EndSurfDO(mg/L)","Temp.C.EndBottom"="EndBotTemp",
"Conductivity.uS.cm.EndBottom"="EndBotCond","Salinity.ppt.EndBottom"="EndBotSalin","DOSat.Percent.EndBottom"="EndBotDO%",
"DOSat.mg.L.EndBottom"="EndBotDO(mg/L)","StartSecchi.cm."="BegSecchi","EndSecchi.cm."="EndSecchi","StartNTU"="BegNTU","StartpH"="BegPH","EndpH"="EndPH"))
#remove unnecessary columns
removals<-c("StationNames","CableAngle","Latitude","Longitude","TrackNote","SalinityZone","WQStartFile","WQEndFile","SerialNumber","DELSME","LONSME/DELSME Hybrid","UNID Centrarchidae","UNID GOBY","UNID Long Skinny","UNID Non-Larval","Chl.ug.L.StartBottom","Chl.RFU.StartBottom","Chl.ug.L.StartTop","Chl.RFU.StartTop","Chl.ug.L.EndTop","Chl.RFU.EndTop","Chl.ug.L.EndBottom","Chl.RFU.EndBottom")
data<-data[ , -which(names(data) %in% removals)]
head(data)
#change date from type factor top type date
data$Date = as.Date(data$Date, format = "%m/%d/%Y")
saveRDS(data,file="C:\\Users\\Barros\\Desktop\\R\\R for work\\OtterTrawlMapApp\\data\\larvaldata.rds")
#debugging
debug=data%>%
filter(Method!="SLS")%>%
filter(Method!="Mysid")
debug
saveRDS(data,file="C:\\Users\\Barros\\Desktop\\R\\shiny-server\\OtterTrawlMapApp\\data\\larvaldata.rds")
##Read Data##
data=read.table("data/CrossTabData.txt", header=T, sep="\t")
#drop lat and long fields to replace later from PolygonGPS#
head(data)
polygon.gps=read.table("data/PolygonGPS.txt", header=T, sep="\t")
species.info=read.table("data/tblSpeciesLookup.txt", header=T, sep="\t")
station.info=read.table("data/tblStationRegions.txt", header=T, sep="\t")
larval.data=readRDS("data/larvaldata.rds")
##Clean Data##
#join data#
data=data%>%
rbind.fill(data,larval.data)
data.location=station.info%>%
inner_join(polygon.gps)
data=data%>%
inner_join(data.location)
head(data)
#format dates#
data$Date <- as.Date(data$Date , "%m/%d/%Y")
#order dates and add month/year columns#
data[order(data$Date, decreasing=TRUE ),]
data<-data%>%
mutate(month = format(Date, "%m"), year = format(Date, "%Y"))
#select for 2015 and 2016#
#target=c("2015","2016")
#data=data%>%
#filter(year %in% target)
head(data)
data.clean=data
#filter out inverts#
data.clean <- subset( data.clean, select = -c(AMPHIPOD, AMPHPD, ASIMUS,CALLIA, CMAENA, CMAGIS, CORBIC, CORBUL, CPRODU, CRANFR, CRANNC, CRANNM, CRANSP, DECORC, EXOPAL,HEMIGR, HEPTSTI, HETERO, HOREGO, IOBSOL, ISOPOD, JELLYF, LSTYLI, MACOMA, MCALIF, MSENHO, MUSBLE, MUSCUL, MUSSEN, MYSID, MYSIDR, MYTILS, NUDIBR, OLURID, PALAEM, PHILIN, PILEWR, POLYCH, PPRODU, RHARRI, RIDGEM, SNAILS, SPONGE, TAPJAP, TUNICA, UCINER, UNID.Clam, UNID.CRAB, UNID.NUD, UNID.LARVAL,UNID.GOBY) )
head(data.clean)
#need to turn all 0 catches to NA values to calculate CPUE properly
data.clean[data.clean == 0] <- NA
#calculate CPUE (catch per minute towed)#
#assign these to new fish range#
#the "which(colnames)" call will display in the console what columns match those
which(colnames(data.clean)=="AMESHA")
which(colnames(data.clean)=="YELSEE")
data.cpue=data.clean
data.cpue[,47:110]=data.cpue[,47:110]/data.clean$TowDuration
head(data.cpue)
#sum up catch data for totals#
data.cpue$All=rowSums(data.cpue[,47:110], na.rm=T)
head(data.cpue)
#rearrange order#
data.cpue = data.cpue[, c(1:46,129, 47:128)]
#change month from number to month name#
data.cpue$monthname <- months(as.Date(data.cpue$Date))
head(data.cpue)
##rearrange in longform using reshape2 melt##
which(colnames(data.cpue)=="All")
which(colnames(data.cpue)=="YELSEE")
data.cpue.melt=melt(data.cpue,id.vars=c("ID","Polygon.Station","Method","BegSurfSalin","BegSurfCond","BegSurfTemp","BegSurfDO.mg.L.","BegSurfDO.","Bay.Region","Date","longitude","latitude","Tributary.Marsh"), measure.vars=c(47:111),
variable.name="FishCode",
value.name="CPUE")
head(data.cpue.melt)
data.cpue.melt=data.cpue.melt[order(data.cpue.melt$FishCode),]
head(data.cpue.melt)
#join in common names#
data.cpue.melt=data.cpue.melt%>%
inner_join(species.info)
head(data.cpue.melt)
#change NA values to 0#
data.cpue.melt$CPUE[is.na(data.cpue.melt$CPUE)]<-0
#average CPUE by month, year and station#
#not using this anymore due to changing the date system
#data.melt.average=data.cpue.melt%>%
#group_by_("month","Bay.Region","monthname","year","Polygon.Station","latitude","longitude","CommonName","NatInv")%>%
#summarise(CPUE=mean(CPUE,na.rm=TRUE), BegSurfSalin=mean(BegSurfSalin,na.rm=TRUE), BegSurfTemp=mean(BegSurfTemp, na.rm=TRUE),
#BegSurfCond=mean(BegSurfCond, na.rm=TRUE),BegSurfDO.=mean(BegSurfDO.,na.rm=TRUE),
#BegSurfDO.mg.L.=mean(BegSurfDO.mg.L.,na.rm=TRUE))
#data.melt.average
#now switch 0 back to na#
#data.melt.average$CPUE[data.melt.average$CPUE == 0] <- NA
#get bins for CPUE averages#
#max(data.melt.average$CPUE, na.rm=TRUE)
#data.melt.average[order(data.melt.average$CPUE, decreasing=TRUE ),]
#CPUE.bins <- hist(data.melt.average$CPUE,plot=TRUE)
###data debugging###
data.debug=larval.data%>%
filter(Method=="20mm")
data.debug
runApp()
data.debug=data.cpue.melt%>%
filter(Method=="20mm")
data.debug
data.debug=data.cpue.melt%>%
filter(Method=="LOT")
data.debug
data.debug=data.cpue.melt%>%
filter(Method=="SLS")
data.debug
data.debug=larval.data%>%
filter(Method=="SLS")
data.debug
data=read.table("data/CrossTabData.txt", header=T, sep="\t")
head(data)
polygon.gps=read.table("data/PolygonGPS.txt", header=T, sep="\t")
species.info=read.table("data/tblSpeciesLookup.txt", header=T, sep="\t")
station.info=read.table("data/tblStationRegions.txt", header=T, sep="\t")
larval.data=readRDS("data/larvaldata.rds")
data=data%>%
rbind.fill(data,larval.data)
data.location=station.info%>%
inner_join(polygon.gps)
data=data%>%
inner_join(data.location)
head(data)
data.debug=data%>%
filter(Method=="SLS")
data.debug
data.debug=data%>%
filter(Method=="LOT")
data.debug
data$Date <- as.Date(data$Date , "%m/%d/%Y")
data.debug=data%>%
filter(Method=="SLS")
data.debug
sapply(larval.data,class)
sapply(data,class)
data=read.table("data/CrossTabData.txt", header=T, sep="\t")
head(data)
polygon.gps=read.table("data/PolygonGPS.txt", header=T, sep="\t")
species.info=read.table("data/tblSpeciesLookup.txt", header=T, sep="\t")
station.info=read.table("data/tblStationRegions.txt", header=T, sep="\t")
larval.data=readRDS("data/larvaldata.rds")
data=data%>%
rbind.fill(data,larval.data)
data.location=station.info%>%
inner_join(polygon.gps)
data=data%>%
inner_join(data.location)
head(data)
sapply(data,class)
data=read.table("data/CrossTabData.txt", header=T, sep="\t")
head(data)
polygon.gps=read.table("data/PolygonGPS.txt", header=T, sep="\t")
species.info=read.table("data/tblSpeciesLookup.txt", header=T, sep="\t")
station.info=read.table("data/tblStationRegions.txt", header=T, sep="\t")
larval.data=readRDS("data/larvaldata.rds")
data=data%>%
rbind.fill(data,larval.data)
sapply(data,class)
data=read.table("data/CrossTabData.txt", header=T, sep="\t")
head(data)
polygon.gps=read.table("data/PolygonGPS.txt", header=T, sep="\t")
species.info=read.table("data/tblSpeciesLookup.txt", header=T, sep="\t")
station.info=read.table("data/tblStationRegions.txt", header=T, sep="\t")
larval.data=readRDS("data/larvaldata.rds")
data$Date <- as.Date(data$Date , "%m/%d/%Y")
data=data%>%
rbind.fill(data,larval.data)
data.location=station.info%>%
inner_join(polygon.gps)
data=data%>%
inner_join(data.location)
head(data)
data.debug=data%>%
filter(Method=="SLS")
data.debug
runApp()
